>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [2, 4, 8],
...     [3, 8, 10],
...     [8, 12, 1]
... ]
>>> print(matrix_divided(matrix, 2))
[[1.0, 2.0, 4.0], [1.5, 4.0, 5.0], [4.0, 6.0, 0.5]]
>>> print(matrix_divided(matrix, 5))
[[0.4, 0.8, 1.6], [0.6, 1.6, 2.0], [1.6, 2.4, 0.2]]
>>> matrix = [
...     [2.2, 3.4, 5.9],
...     [3.8, 8.1, 4.7]
... ]
>>> print(matrix_divided(matrix, 1.8))
[[1.22, 1.89, 3.28], [2.11, 4.5, 2.61]]
>>> print(matrix_divided(matrix, -2.3))
[[-0.96, -1.48, -2.57], [-1.65, -3.52, -2.04]]
>>> print(matrix_divided(matrix, 'a'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/classic1/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 40, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/classic1/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 42, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
print(matrix_divided(10, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/classic1/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 27, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = []
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/classic1/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 24, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [
...     [24, 32, 8],
...     [2, 6, 1, 4],
...     [22, 7]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/classic1/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 24, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [
...     ['a', 5, 8],
...     [4, 'c', 9]
... ]
>>> print(matrix_divided(matrix, 5))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/classic1/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 33, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [24, [5, 7], 3]
>>> print(matrix_divided(matrix, 5))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/classic1/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 30, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>>
